name: Windows

on:
  workflow_dispatch:
  push:
    paths:
      - '**'
      - 'examples/**'
      - '.github/workflows/windows.yml'
  pull_request:
    paths:
      - '**'
      - 'examples/**'
      - '.github/workflows/windows.yml'
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write  # for actions/upload-release-asset to upload release asset
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        compiler: [mingw-w64]
        bits: [64]

    env:
      RELEASE_NAME: RGFW-Odin-dev_win${{ matrix.bits }}_${{ matrix.compiler }}
      GNUTARGET: default

    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Setup Release Version
      run: |
        echo "RELEASE_NAME=RGFW-Odin-${{ github.event.release.tag_name }}_win${{ matrix.bits }}_${{ matrix.compiler }}" >> $GITHUB_ENV
      shell: bash
      if: github.event_name == 'release' && github.event.action == 'published'

    - name: Setup Environment
      run: | 
        dir
        mkdir build
        cd build
        mkdir ${{ env.RELEASE_NAME }}
        cd ${{ env.RELEASE_NAME }}
        mkdir include
        mkdir lib
        cd ../../../RGFW-Odin

    - name: Build Library (MinGW-w64 64bit)
      run: |
        ${{ matrix.ARCH }}-w64-mingw32-gcc.exe --version
        windres.exe --version
        dir C:\msys64\mingw64\bin
        make
      shell: cmd
      if: |
        matrix.compiler == 'mingw-w64' &&
        matrix.bits == 64
        
    - name: Generate Artifacts
      run: |
        copy /Y .\RGFW\RGFW.h .\build\${{ env.RELEASE_NAME }}\include
        copy /Y .\RGFW\libRGFW.dll .\build\${{ env.RELEASE_NAME }}\lib
        copy /Y .\RGFW\RGFW.odin .\build\${{ env.RELEASE_NAME }}\lib
        copy /Y .\README.md .\build\${{ env.RELEASE_NAME }}\README.md
        cd build
        7z a ./${{ env.RELEASE_NAME }}.zip ./${{ env.RELEASE_NAME }}
        dir
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_NAME }}.zip
        path: ./build/${{ env.RELEASE_NAME }}.zip
        
    - name: Upload Artifact to Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./build/${{ env.RELEASE_NAME }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'release' && github.event.action == 'published'
